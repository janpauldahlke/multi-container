#specify docker as dep
# build test version of react project
# run tests
# we are lacking tests for worker and server yet, so we can not run any tests here
# build prod version of all projects
# push all to dockerhub
# tell AWS elastic to update

sudo: required
language: generic
services: 
  - docker
before_install:
  - docker build -t hagbardc3line/react-test -f ./client/Dockerfile.dev ./client
  # -- docker build hagbardc3line/other-prject
script:
  - docker run -e CI=true hagbardc3line/react-test npm run test
  # -- docker run hagbardc3line/other-prject test foo
##on test success build all
after_success: 
  - docker build -t hagbardc3line/multi-client ./client
  - docker build -t hagbardc3line/multi-worker ./worker
  - docker build -t hagbardc3line/multi-server ./server
  - docker build -t hagbardc3line/multi-nginx ./nginx

  #login to docker CLI
  #this is how to do it
  - echo "$DOCKER_PASS" | docker login -u "$DOCKER_ID" --password-stdin
  #push images to docker CLI
  - docker push hagbardc3line/multi-client
  - docker push hagbardc3line/multi-worker
  - docker push hagbardc3line/multi-server
  - docker push hagbardc3line/multi-nginx

## the visibility here sucks, it could take up 2 24 hours to see the images
## wth is going on here with docker login
##
